{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/server-test/server-test.component.ts","webpack:///src/app/components/server-test/server-test.component.html","webpack:///src/app/services/server-test/server-test.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","a","prop","ServerTestComponent","serverTestService","serverResponse$","getServerTestData$","console","log","getAnswer","ServerTestService","http","r","get","pipe","d","JSON","stringify","subscribe","data","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'dive-inn';\r\n}\r\n","<img src='/assets/images/logoLg.png' />\r\n<img src='/assets/images/logoSm.png' />\r\n<h1 class='bevan'>Dive Inn - What's Inside ? ! @ # $ % * ( ) ~ - + = ' \" ;</h1>\r\n<h1 class='alfa'>Dive Inn - What's Inside ? ! @ # $ % * ( ) ~ - + = ' \" ;</h1>\r\n<h1 class='anton'>Dive Inn - What's Inside ? ! @ # $ % * ( ) ~ - + = ' \" ;</h1>\r\n<h1 class='patua'>Dive Inn - What's Inside ? ! @ # $ % * ( ) ~ - + = ' \" ;</h1>\r\n<p> The quick brown ox forked over the jazzy dog mp.</p>\r\n<p class='gray-lt'> The quick brown ox forked over the jazzy dog mp. ? ! @ # $ % & * ( ) ~ - + = ' \" ;</p>\r\n<p class='gray-md'> The quick brown ox forked over the jazzy dog mp.</p>\r\n<p class='ptSans gray-dk'> The quick brown ox forked over the jazzy dog mp.</p>\r\n<p class='ptSansBold'> The quick brown ox forked over the jazzy dog mp.</p>\r\n\r\n<app-server-test></app-server-test>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ServerTestComponent } from './components/server-test/server-test.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ServerTestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { ServerTestService } from '../../services/server-test/server-test.service';\nimport { ServerTestData } from '../../services/server-test/server-test.model';\nimport { Subscription, Subject, Observable } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\nlet a = { prop: \"a\" };\n\n@Component({\n  selector: 'app-server-test',\n  templateUrl: './server-test.component.html',\n  styleUrls: ['./server-test.component.scss']\n})\nexport class ServerTestComponent implements OnInit, OnDestroy {\n\n  public serverResponse$: Observable<ServerTestData>;\n\n  constructor(public serverTestService: ServerTestService) {\n  }\n\n  ngOnInit(): void {\n    this.serverResponse$ = this.serverTestService.getServerTestData$();\n  }\n  ngOnDestroy(): void {\n  }\n\n  getAnswer() {\n    console.log('**** component getAnswer()');\n    this.serverTestService.getServerTestData$();\n  }\n}\n","<br/>\n<hr/>\n<h1>Server Test</h1>\n\n<button (click)=\"getAnswer()\">server test</button>\n\n<!-- <p style=\"border: 1px solid red; padding: 1em;\">Return fn(): {{ (serverTestService.getServerTestData$() | async) }}</p> -->\n<p style=\"border: 1px solid red; padding: 1em;\">Return var: {{ (serverResponse$ | async)?.test_id }}</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ServerTestData } from './server-test.model';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerTestService {\n\n  constructor(private http: HttpClient) { }\n\n  public getServerTestData$(): Observable<ServerTestData> {\n    console.log('**** service getServerTestData()');\n    let r = this.http.get<ServerTestData>('/api/server-test').pipe(\n      tap((d) => console.log(\"data from tap:  \" + JSON.stringify(d, null, 4)))\n    ); \n    r.subscribe(data => console.log('response: ' + JSON.stringify(data, null, 4)));\n    return r;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}