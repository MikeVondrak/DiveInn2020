___________________________________
TODO

1. Create functionality for moving fonts from Available to Selectable or Blacklisted

* REAMDE.md files - markdown (text) files describing key components/services

FontManagerService
* Remove subscriptions from service, only pass observables to all components - DONE
* Filter fonts by category before using in lists
  - need category API method

Transitions
  - Initial site loading
  - Page loading
  - Remove on Available Fonts list

POST a new font to the db
  - logic to check if font already exists
  - Express router for POST

UI to show selected fonts, button to remove(?)
  - blacklist fonts so they don't show up in available fonts selection
    separate table (Y) or 
  ! flag on font object - rather than a separate table just have another value on font

Add List ID field to Font - enum SELECTABLE / BLACKLISTED / AVAILABLE - DONE
  - gets rid of blacklisted / selectable tables

Entire font family added to blacklist and selectable

__________________________________
Mike Tasks
-----
0. rename Font service to FontApi, model etc
1. Cleanup FontManagerService
  - Cleanup ui-font.model.ts / font-test.component 
    - remove old const objects etc
    - restructure object?
      - conversions from Google Font, to Google Font URI, db font
2. fix logger or remove comments
3. try using shared interface for API FE/BE

__________________________________
Long Term
-------
1. figure out why intellisense sucks
2. look into GraphQL
3. NgRx
  - caching Google Fonts data
4. User login / authentication
5. figure out how/where to store credentials
    db
    google API

------

Dropdown / radio buttons of sort options

List of fonts, paginated
  some way to select how many fonts per page

Buttons(?) for add to favorites or blacklist


Style option checkmarks ?
  italic ? bold ?


______________________________________________________________________________________________________
DONE

Cache X number of sort methods
  Popularity, trending - DONE
  try sorting ourselves for alpha, style (category)
    - data processing times are likely insignificant

1. Categories of fonts (2 tables with foreign keys) - DONE

* Google API
  append the query parameter key=yourAPIKey to all request URLs

  - service to get all the fonts
    * GoogleFontsApiService
  - data cached (only make the call once per session) -- use NgRx(??)
  
New Pages - DONE
  * Font Selection
  * Font Configuration
  * Font Demo

Font Lists
  * create a new page for Font Selection
  display list of:
    1. selectable - DONE
    2. blacklisted - DONE
    3. available - DONE